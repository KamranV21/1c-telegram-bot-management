#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Управляет регламентным заданием бота. Расписание задания задается в форме элемента.
// Предусматривает работу через подсистему "СтандартныеПодсистемы.РаботаВМоделиСервиса.ОчередьЗаданий".
//
// Параметры:
//  РасписаниеРегламентногоЗадания - РасписаниеРегламентногоЗадания - расписание регламентного задания.
//
Процедура ВключитьОтключитьРегламентноеЗадание(РасписаниеРегламентногоЗадания) Экспорт

	Задание = СуществующееЗадание();
	Если ВариантВзаимодействия = Перечисления.TBM_ВариантыВзаимодействияСБотамиTelegram.РегламентноеЗадание Тогда

		ПараметрыЗадания = СвойстваЗадания(РасписаниеРегламентногоЗадания);
		ПользовательЗадания = ПользовательРегламентногоЗадания;

		Если ЗначениеЗаполнено(ПользовательЗадания) Тогда
			ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользовательЗадания,
				"ИдентификаторПользователяИБ");
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(
				ИдентификаторПользователяИБ);

			ПараметрыЗадания.Вставить("ИмяПользователя", ПользовательИБ.Имя);
		Иначе
			ПараметрыЗадания.Вставить("ИмяПользователя", "");
		КонецЕсли;

		Если Задание = Неопределено Тогда

			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.TBM_ВзаимодействиеСБотамиTelegram);
			ПараметрыЗадания.Вставить("Ключ", Строка(Новый УникальныйИдентификатор));
			ПараметрыЗадания.Вставить("Использование", Истина);

			ИдентификаторРегламентногоЗадания = НовоеЗадание(ПараметрыЗадания);
		Иначе
			УстановитьПараметрыЗадания(Задание, ПараметрыЗадания);
		КонецЕсли;

	Иначе

		Если Задание <> Неопределено Тогда
			УдалитьЗадание(Задание);
		КонецЕсли;
		ИдентификаторРегламентногоЗадания = Неопределено;

	КонецЕсли;

КонецПроцедуры

// Получение свойств регламентного задания.
// 
// Параметры:
//  РасписаниеЗадания - Неопределено, РасписаниеРегламентногоЗадания - Расписание регламентного задания
// 
// Возвращаемое значение:
//  Структура - Свойства задания:
// * Расписание - Неопределено, РасписаниеРегламентногоЗадания - Расписание
// * Параметры - Массив Из Строка 
// * ИмяМетода - Строка - 
// * Наименование - Строка - 
Функция СвойстваЗадания(РасписаниеЗадания = Неопределено) Экспорт

	Параметры = Новый Массив;
	Параметры.Добавить(Код);

	ПараметрыЗадания = Новый Структура;
	Если Не РасписаниеЗадания = Неопределено Тогда
		ПараметрыЗадания.Вставить("Расписание", РасписаниеЗадания);
	КонецЕсли;
	ПараметрыЗадания.Вставить("Параметры", Параметры);
	ПараметрыЗадания.Вставить("ИмяМетода", Метаданные.РегламентныеЗадания.TBM_ВзаимодействиеСБотамиTelegram.ИмяМетода);
	ПараметрыЗадания.Вставить("Наименование", НаименованиеРегламентногоЗадания());

	Возврат ПараметрыЗадания;

КонецФункции

// Функция - Существующее задание
// 
// Возвращаемое значение:
//   РегламентноеЗадание - регламентное задание - регламентное задание, соответствующее боту.
//							Если задания нет - возвращается "Неопределено".
//
Функция СуществующееЗадание() Экспорт

	Отбор = Новый Структура;

	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Отбор.Вставить("Ключ", ИдентификаторРегламентногоЗадания);
	Иначе
		Если ЗначениеЗаполнено(ИдентификаторРегламентногоЗадания) Тогда
			Отбор.Вставить("Идентификатор", Новый УникальныйИдентификатор(ИдентификаторРегламентногоЗадания));
		КонецЕсли;
		Отбор.Вставить("Наименование", НаименованиеРегламентногоЗадания());

	КонецЕсли;

	Отбор.Вставить("Метаданные", Метаданные.РегламентныеЗадания.TBM_ВзаимодействиеСБотамиTelegram);

	Найденные = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Задание = ?(Найденные.Количество() = 0, Неопределено, Найденные[0]);

	Возврат Задание;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НаименованиеРегламентногоЗадания()

	Возврат СтрШаблон(НСтр("en = 'Interaction with %1 bot'; ru = 'Взаимодействие с ботом %1'; az = '%1 bot ilə əlaqə'",
		ОбщегоНазначения.КодОсновногоЯзыка()), Код);

КонецФункции

// Удаляет регламентное задание, соответствующее объекту.
//
// Параметры:
// Задание - ОбъектМетаданных
// 
Процедура УдалитьЗадание(Задание)

	РегламентныеЗаданияСервер.УдалитьЗадание(Задание);

КонецПроцедуры

Функция НовоеЗадание(ПараметрыЗадания)

	РегламентноеЗадание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);

	Если ТипЗнч(РегламентноеЗадание) = Тип("СтрокаТаблицыЗначений") Тогда
		Идентификатор = РегламентноеЗадание.Ключ;
	Иначе
		Идентификатор = Строка(РегламентноеЗадание.УникальныйИдентификатор);
	КонецЕсли;

	Возврат Идентификатор;

КонецФункции

Процедура УстановитьПараметрыЗадания(Задание, СвойстваЗадания)

	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, СвойстваЗадания);

	УстановитьПривилегированныйРежим(Истина);

КонецПроцедуры

#КонецОбласти

#КонецЕсли