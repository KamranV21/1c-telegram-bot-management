#Область ОбработчикиСобытийФормы

&НаСервере
Процедура УБТ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда

		Параметры.Свойство("УБТ_ВидЭлектронногоСообщения", Объект.УБТ_ВидЭлектронногоСообщения);

		Если Не ЗначениеЗаполнено(Объект.УБТ_ВидЭлектронногоСообщения) Тогда
			Объект.УБТ_ВидЭлектронногоСообщения = Перечисления.УБТ_ВидыЭлектронныхСообщений.ЭлектронноеПисьмо;
		КонецЕсли;

	КонецЕсли;

	УБТ_РазместитьЭлементыTelegramНаФорме();
	УБТ_УстановитьОбработчикКомандыОтправкиСообщения();
	УБТ_УстановитьВидимостьЭлементовПоВидуСообщения();

	Если Объект.УБТ_ВидЭлектронногоСообщения = Перечисления.УБТ_ВидыЭлектронныхСообщений.Telegram Тогда
		УБТ_УстановитьБотаTelegramПоУмолчанию();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РазмещенииЭлементов

&НаСервере
Процедура УБТ_РазместитьЭлементыTelegramНаФорме()

	УБТ_РазместитьПереключательВидаСообщения();
	УБТ_РазместитьРеквизитБотаTelegram();
	УБТ_РазместитьТаблицуЧатовTelegram();

КонецПроцедуры

&НаСервере
Процедура УБТ_РазместитьПереключательВидаСообщения()

	ЭлементВидЭлектронногоСообщения = Элементы.Вставить("УБТ_ВидЭлектронногоСообщения", Тип("ПолеФормы"),
		Элементы.ГруппаЛево, Элементы.СписокПолучателей);
	ЭлементВидЭлектронногоСообщения.ПутьКДанным = "Объект.УБТ_ВидЭлектронногоСообщения";
	ЭлементВидЭлектронногоСообщения.Вид = ВидПоляФормы.ПолеПереключателя;
	ЭлементВидЭлектронногоСообщения.ВидПереключателя = ВидПереключателя.Тумблер;

	Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.УБТ_ВидыЭлектронныхСообщений.ЗначенияПеречисления Цикл
		ЭлементВидЭлектронногоСообщения.СписокВыбора.Добавить(
			Перечисления.УБТ_ВидыЭлектронныхСообщений[ЗначениеПеречисления.Имя], ЗначениеПеречисления.Синоним);
	КонецЦикла;

	ЭлементВидЭлектронногоСообщения.УстановитьДействие("ПриИзменении", "УБТ_ВидЭлектронногоСообщенияПриИзменении");

КонецПроцедуры

&НаСервере
Процедура УБТ_РазместитьРеквизитБотаTelegram()

	ЭлементБотTelegram = Элементы.Вставить("УБТ_БотTelegram", Тип("ПолеФормы"), Элементы.ГруппаЛево,
		Элементы.СписокПолучателей);
	ЭлементБотTelegram.ПутьКДанным = "Объект.УБТ_БотTelegram";
	ЭлементБотTelegram.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементБотTelegram.АвтоОтметкаНезаполненного = Истина;

КонецПроцедуры

&НаСервере
Процедура УБТ_РазместитьТаблицуЧатовTelegram()

	ЭлементЧатыПолучатели = Элементы.Вставить("УБТ_ЧатыПолучатели", Тип("ТаблицаФормы"), Элементы.ГруппаЛево,
		Элементы.СписокПолучателей);
	ЭлементЧатыПолучатели.ПутьКДанным = "Объект.УБТ_ЧатыПолучатели";

	КолонкаТаблицы = Элементы.Добавить("УБТ_ЧатыПолучателиЧат", Тип("ПолеФормы"), ЭлементЧатыПолучатели);
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	КолонкаТаблицы.ПутьКДанным = "Объект.УБТ_ЧатыПолучатели.Чат";

	КолонкаТаблицы = Элементы.Добавить("УБТ_ЧатыПолучателиДоставлено", Тип("ПолеФормы"), ЭлементЧатыПолучатели);
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеФлажка;
	КолонкаТаблицы.ПутьКДанным = "Объект.УБТ_ЧатыПолучатели.Доставлено";
	КолонкаТаблицы.ТолькоПросмотр = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура УБТ_ВидЭлектронногоСообщенияПриИзменении(Элемент)

	УБТ_УстановитьОбработчикКомандыОтправкиСообщения();
	УБТ_УстановитьВидимостьЭлементовПоВидуСообщения();

	Если Объект.УБТ_ВидЭлектронногоСообщения = ПредопределенноеЗначение(
		"Перечисление.УБТ_ВидыЭлектронныхСообщений.Telegram") Тогда
		УБТ_УстановитьБотаTelegramПоУмолчанию();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УБТ_ОтправитьСообщениеПоTelegram(Команда) Экспорт

	ОчиститьСообщения();

	Отказ = Ложь;

	Если Не ЗначениеЗаполнено(Объект.УБТ_БотTelegram) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр(
			"az = 'Mesajı göndərməyi planlaşdırdığınız Telegram botunu göstərin.';en = 'Specify the Telegram bot from which you plan to send the message.';ru = 'Укажите бота Telegram, от лица которого вы планируете отправить сообщение.'"),
			, "УБТ_БотTelegram", , Отказ);
	КонецЕсли;

	Если Объект.УБТ_ЧатыПолучатели.Количество() = 0 Тогда

		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр(
			"az = 'Ən azı bir mesaj alıcısını göstərin.';en = 'Specify at least one message recipient.';ru = 'Укажите хотя бы одного получателя сообщения.'"),
			, "УБТ_ЧатыПолучатели", , Отказ);

	Иначе

		УБТ_ПроверитьПолучателейСообщенияВTelegram(Отказ);

	КонецЕсли;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	УБТ_НачатьПередачуСообщенияПоTelegram();

КонецПроцедуры

#КонецОбласти

#Область ОтправкаяСообщенияПоTelegram

&НаКлиенте
Процедура УБТ_НачатьПередачуСообщенияПоTelegram()

	ВыполняетсяОтправка = Истина;

	Если Объект.Ссылка.Пустая() Или Модифицированность Или Объект.ВключатьТелоИсходногоПисьма Или (Объект.СтатусПисьма
		= ПредопределенноеЗначение("Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Черновик")) Тогда
		Записать();
	КонецЕсли;

	ВыполняетсяОтправка = Ложь;

	Если Модифицированность Тогда
		Возврат;
	КонецЕсли;

	Если Не УБТ_ОтправитьСообщениеПоTelegramНаСервере() Тогда
		Записать();
		Возврат;
	КонецЕсли;

	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура УБТ_ПроверитьПолучателейСообщенияВTelegram(Отказ)

	ТекстСообщения = НСтр(
		"az = 'Mesajın göndəriləcəyi Telegram söhbətini göstərin.';en = 'Specify the Telegram chat to which the message should be sent.';ru = 'Укажите чат Telegram, в который нужно отправить сообщение.'");

	Для Каждого СтрокаТабличнойЧасти Из Объект.УБТ_ЧатыПолучатели Цикл

		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Чат) Тогда

			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.УБТ_ЧатыПолучатели",
				СтрокаТабличнойЧасти.НомерСтроки, "Чат");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция УБТ_ОтправитьСообщениеПоTelegramНаСервере()

	Если Объект.ЕстьВложения Тогда
		Результат = УБТ_ОтправитьГруппуМедиафайловВЧатыTelegram();
	Иначе
		Результат = УБТ_ОтправитьСообщенияВЧатыTelegram();
	КонецЕсли;

	Если Не Результат Тогда
		Возврат Результат;
	КонецЕсли;

	ПисьмоОбъект = РеквизитФормыВЗначение("Объект");

	НачатьТранзакцию();
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ЭлектронноеПисьмоИсходящее");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Объект.Ссылка);
		РегистрыСведений.ПредметыПапкиВзаимодействий.ЗаблокироватьПредметыПапокВзаимодействий(Блокировка, Объект.Ссылка);
		Блокировка.Заблокировать();

		Если Не ПисьмоОбъект.УдалятьПослеОтправки Тогда

			ПисьмоОбъект.СтатусПисьма = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Отправлено;
			ПисьмоОбъект.ДатаОтправления = ТекущаяДатаСеанса();
			ПисьмоОбъект.Записать(РежимЗаписиДокумента.Запись);
			ЗначениеВРеквизитФормы(ПисьмоОбъект, "Объект");

			Взаимодействия.УстановитьПапкуЭлектронногоПисьма(Объект.Ссылка, Взаимодействия.ОпределитьПапкуДляПисьма(
				Объект.Ссылка));
			ТекущийСтатусПисьма = Объект.СтатусПисьма;
		Иначе
			ПисьмоОбъект.Прочитать();
			ПисьмоОбъект.Удалить();
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;

	Возврат Результат;

КонецФункции

&НаСервере
Функция УБТ_ОтправитьГруппуМедиафайловВЧатыTelegram()

	Результат = Истина;

	ИдентификаторыЧатов = УБТ_ИдентификаторыЧатовTelegram();
	ИдентификаторыФайлов = Новый Соответствие;

	Для Каждого СтрокаТабличнойЧасти Из Объект.УБТ_ЧатыПолучатели Цикл

		Если Объект.СтатусПисьма <> Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Отправлено
			И СтрокаТабличнойЧасти.Доставлено Тогда
			Продолжить;
		КонецЕсли;

		ИдентификаторЧата = ИдентификаторыЧатов[СтрокаТабличнойЧасти.Чат];
		Сообщение = УБТ_РаботаСБотамиTelegram.НоваяСтруктураСообщенияМедиафайлов();
		Сообщение.chat_id = ИдентификаторЧата;

		Индекс = 0;
		Для Каждого СтрокаВложения Из Вложения Цикл

			Медиафайл = УБТ_РаботаСБотамиTelegram.НоваяСтруктураМедиа();
			Медиафайл.type = "document";
			Медиафайл.fileId = ?(ИдентификаторыФайлов[Индекс] <> Неопределено, ИдентификаторыФайлов[Индекс], "");
			Если Не ЗначениеЗаполнено(Медиафайл.fileId) Тогда
				Медиафайл.binary = РаботаСФайлами.ДвоичныеДанныеФайла(СтрокаВложения.Ссылка);
			КонецЕсли;
			Медиафайл.filename = СтрокаВложения.ИмяФайла;

			Если Индекс = 0 Тогда

				Если Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст Тогда
					Медиафайл.caption = Объект.Текст;
				Иначе
					Медиафайл.caption = Объект.ТекстHTML;
					Медиафайл.parse_mode = "HTML";
				КонецЕсли;

			КонецЕсли;

			Сообщение.media.Добавить(Медиафайл);

			Индекс = Индекс + 1;

		КонецЦикла;

		ТелоВыгрузкиГруппыМедиафайлов = УБТ_РаботаСБотамиTelegram.ТелоВыгрузкиГруппыМедиафайлов(Сообщение);

		СообщениеОтвета = УБТ_РаботаСБотамиTelegram.ОтправитьГруппуМедиафайловВЧат(Объект.УБТ_БотTelegram,
			ТелоВыгрузкиГруппыМедиафайлов);
		СтрокаТабличнойЧасти.Доставлено = СообщениеОтвета <> Неопределено;

		Если СтрокаТабличнойЧасти.Доставлено И СтрокаТабличнойЧасти.НомерСтроки = 1 Тогда
			ИндексОтправленногоФайла = 0;
			Для Каждого ОтправленноеСообщение Из СообщениеОтвета.result Цикл
				ИдентификаторыФайлов.Вставить(ИндексОтправленногоФайла, ОтправленноеСообщение.document.file_id);
				ИндексОтправленногоФайла = ИндексОтправленногоФайла + 1;
			КонецЦикла;
		Иначе
			ТекстСообщения = СтрШаблон(НСтр(
				"az = '%1 söhbətinə mesaj göndərmək mümkün olmadı';en = 'Failed to send the message to chat %1';ru = 'Не удалось отправить сообщение в чат %1'"),
				СтрокаТабличнойЧасти.Чат);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Результат = Ложь;
		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

&НаСервере
Функция УБТ_ОтправитьСообщенияВЧатыTelegram()

	Результат = Истина;

	ИдентификаторыЧатов = УБТ_ИдентификаторыЧатовTelegram();

	Для Каждого СтрокаТабличнойЧасти Из Объект.УБТ_ЧатыПолучатели Цикл

		Если Объект.СтатусПисьма <> Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Отправлено
			И СтрокаТабличнойЧасти.Доставлено Тогда
			Продолжить;
		КонецЕсли;

		ИдентификаторЧата = ИдентификаторыЧатов[СтрокаТабличнойЧасти.Чат];

		Сообщение = УБТ_РаботаСБотамиTelegram.НоваяСтруктураСообщенияЧата();
		Сообщение.chat_id = ИдентификаторЧата;

		Если Объект.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст Тогда
			Сообщение.text = Объект.Текст;
		Иначе
			Сообщение.text = Объект.ТекстHTML;
			Сообщение.parse_mode = "HTML";
		КонецЕсли;

		СтрокаТабличнойЧасти.Доставлено = УБТ_РаботаСБотамиTelegram.ОтправитьСообщениеВЧат(Объект.УБТ_БотTelegram,
			Сообщение);

		Если Не СтрокаТабличнойЧасти.Доставлено Тогда
			ТекстСообщения = СтрШаблон(НСтр(
				"az = '%1 söhbətinə mesaj göndərmək mümkün olmadı';en = 'Failed to send the message to chat %1';ru = 'Не удалось отправить сообщение в чат %1'"),
				СтрокаТабличнойЧасти.Чат);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Результат = Ложь;
		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УБТ_УстановитьОбработчикКомандыОтправкиСообщения()

	Если Объект.УБТ_ВидЭлектронногоСообщения = Перечисления.УБТ_ВидыЭлектронныхСообщений.Telegram Тогда
		Команды.Отправить.Действие = "УБТ_ОтправитьСообщениеПоTelegram";
	Иначе
		Команды.Отправить.Действие = "ОтправитьПереслатьВыполнить";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УБТ_УстановитьВидимостьЭлементовПоВидуСообщения()

	Если Объект.УБТ_ВидЭлектронногоСообщения = Перечисления.УБТ_ВидыЭлектронныхСообщений.Telegram Тогда
		Элементы.УБТ_ЧатыПолучатели.Видимость = Истина;
		Элементы.УБТ_БотTelegram.Видимость = Истина;
		Элементы.СписокПолучателей.Видимость = Ложь;
	Иначе
		Элементы.УБТ_ЧатыПолучатели.Видимость = Ложь;
		Элементы.УБТ_БотTelegram.Видимость = Ложь;
		Элементы.СписокПолучателей.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УБТ_УстановитьБотаTelegramПоУмолчанию()

	АктивныеБотыTelegram = Справочники.УБТ_БотыTelegram.АктивныеБотыTelegram();

	Если АктивныеБотыTelegram.Количество() = 1 Тогда
		Объект.УБТ_БотTelegram = АктивныеБотыTelegram[0];
	Иначе
		Объект.УБТ_БотTelegram = Справочники.УБТ_БотыTelegram.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция УБТ_ИдентификаторыЧатовTelegram()

	Чаты = Объект.УБТ_ЧатыПолучатели.Выгрузить().ВыгрузитьКолонку("Чат"); // Массив Из СправочникСсылка.УБТ_ЧатыTelegram
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Чаты, "Код");

КонецФункции

#КонецОбласти

#КонецОбласти